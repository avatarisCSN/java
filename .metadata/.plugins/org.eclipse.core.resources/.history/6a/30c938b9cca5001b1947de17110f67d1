package application;

import java.util.StringTokenizer;

public class proces {
	static int i=0;
	public  int[][] addToMass(int result[], int x)
	{
		 // Объявим коснтанту для размера массива
    
        // Создаем двумерный массив 
        int[][] graph = new int[x][x+1];
 
        // Цикл по первой размерности (первые квадратные скобки)
        
            // Цикл по второй размерности (вторые квадратные скобки)
            for (int j = 0; j < x+1; j++) {
                graph[i][j] = result[j];
            }
            
        
 
        // Теперь выводим массив на экран
        // Цикл по первой размерности выводит строки
        for (int k=0; k < x; k++) {
            // Цикл по второй размерности выводит колонки - вывод одной строки
            for (int l = 0; l < x+1; l++) {
                // Используем оператор print - без перехода на следующую строку
                System.out.print(graph[k][l]);
            }
            // Переход на следующую строку
            System.out.println();
            
          
           
        }
        i++; 
        return graph;
	}
	public static int[] TxtToInt(String str, int x )
	{
		x=x+1;
		String[] Result= new String[x];
					
					   
						   
						   StringTokenizer tokenizer = new StringTokenizer(str,"+-=");
						   int c=0;
						   while (tokenizer.hasMoreTokens())
						   {
							   
							   
						      String token = tokenizer.nextToken();
						      Result[c] = token; 
						      System.out.println(token);
						      c++;
						       
						   }
						   
						// создаем список строк
						   String[] result2 = new String[x];
							for (int count=0; count < x; count++ )
							{
							// создаем два буферных массива символов
							char[] buff = Result[count].toCharArray();
							char[] buff2 = new char[buff.length];
							
							
							
							// создание переменных для оператора while
							// ап 3>0 2>0 1>0
							// даун 0  1.0 2.1 3.2
							int lengthUP = buff.length;
							int lengthDN = 0;
							// проверка на число 
							while(lengthUP>0)
							{
								lengthUP--;
								lengthDN++;
								
								 boolean tru = Character.isDigit(buff[lengthDN-1]);
								
								 //присвоение
								 if (tru)
								 {
									buff2[lengthDN-1] = buff[lengthDN-1];
									
									if(result2[count] == null)
									{
									result2[count]=Character.toString(buff2[lengthDN-1]); 
									}
									else
									{
									
									result2[count]+=Character.toString(buff2[lengthDN-1]); 
									}
								 }
								 
								
							}
							}
							
				
							int[] resultInt = new int[x];
							for (int i=0; i<x; i++)
							{
								resultInt[i]=Integer.parseInt(result2[i]);
								
							}
		
		return resultInt;
	}
	
		
	}

